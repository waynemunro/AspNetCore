<Project>
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory)..\, Directory.Build.props))\Directory.Build.props" />

  <Import Project="build\dependencies.props" />

  <PropertyGroup>
    <RepositoryRoot>$(MSBuildThisFileDirectory)</RepositoryRoot>
    <PackageTags>aspnetcore;components</PackageTags>

    <!-- So we can use the tool from source within the repo without having to pack -->
    <BlazorToolsDir>$(MSBuildThisFileDirectory)blazor\src\Microsoft.AspNetCore.Blazor.Build\bin\$(Configuration)\netcoreapp3.0\</BlazorToolsDir>
  </PropertyGroup>

  <PropertyGroup>
    <AddImplicitReferences>false</AddImplicitReferences>
    <IsSubfolderBuild>true</IsSubfolderBuild>
    <!-- Workaround microsoft/msbuild#3626 -->
    <AddSyntheticProjectReferencesForSolutionDependencies>false</AddSyntheticProjectReferencesForSolutionDependencies>

    <!-- Api check is currently broken on this subfolder of projects. -->
    <EnableApiCheck>false</EnableApiCheck>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Internal.AspNetCore.Sdk" PrivateAssets="All" Version="$(InternalAspNetCoreSdkPackageVersion)" />
  </ItemGroup>

  <!-- Artifacts layout -->
  <PropertyGroup>
    <ArtifactsDir>$(MSBuildThisFileDirectory)..\..\artifacts\</ArtifactsDir>
    <ArtifactsConfigurationDir>$(ArtifactsDir)$(Configuration)\</ArtifactsConfigurationDir>
    <BasePackageOutputPath>$(ArtifactsConfigurationDir)packages\</BasePackageOutputPath>
    <ProductPackageOutputPath>$(BasePackageOutputPath)product\</ProductPackageOutputPath>
    <InternalPackageOutputPath>$(BasePackageOutputPath)internal\</InternalPackageOutputPath>
  </PropertyGroup>

</Project>
