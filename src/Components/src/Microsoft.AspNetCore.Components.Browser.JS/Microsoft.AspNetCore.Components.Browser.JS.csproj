<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Description>JavaScript runtime files needed for ASP.NET Core Components browser rendering.</Description>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <DefaultItemExcludes>${DefaultItemExcludes};node_modules\**</DefaultItemExcludes>
    <IsPackable>false</IsPackable>

    <!-- VS's FastUpToDateCheck doesn't consider .ts file changes, so it's necessary to disable it to get incremental builds to work correctly (albeit not as fast as if FastUpToDateCheck did work for them) -->
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.FileProviders.Embedded" Version="$(AspNetCorePackageVersion)" />
    <WebpackInputs Include="**\*.ts" Exclude="node_modules\**" />
  </ItemGroup>

  <Target Name="EnsureNpmRestored" Condition="!Exists('node_modules')">
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec Command="npm ci" />
  </Target>

  <Target Name="RunWebpack" AfterTargets="ResolveReferences" Inputs="@(WebpackInputs)" Outputs="dist\components.webassembly.js;dist\components.server.js" DependsOnTargets="EnsureNpmRestored">
    <RemoveDir Directories="dist" />
    <Exec Command="npm run build:debug" Condition="'$(Configuration)' == 'Debug'" />
    <Exec Command="npm run build:production" Condition="'$(Configuration)' != 'Debug'" />
    <ItemGroup>
      <EmbeddedResource Include="dist\components.webassembly.js" LogicalName="blazor./components.webassembly.js" />
      <EmbeddedResource Include="dist\components.server.js" LogicalName="blazor./components.server.js" />
    </ItemGroup>
  </Target>
</Project>
